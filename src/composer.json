{
    "name": "alcidesrc/php-skeleton",
    "description": "Application skeleton for projects based on PHP",
    "type": "project",
    "keywords": ["bootstrap", "skeleton", "php", "TDD", "DDD", "clean code", "boilerplate", "best practices"],
    "license": "MIT",
    "authors": [
        {
            "name": "Alcides Ramos",
            "email": "info@alcidesrc.com",
            "homepage": "https://alcidesrc.com/"
        }
    ],
    "support": {
        "issues": "https://github.com/alcidesrc/php-skeleton/issues",
        "source": "https://github.com/alcidesrc/php-skeleton"
    },
    "require": {
        "php": "^8.4",
        "ext-fileinfo": "*",
        "ext-gd": "*",
        "flowwe/mtman": "^1.0",
        "php-amqplib/php-amqplib": "^3.7"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "UnitTests\\": "tests/Unit"
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "infection/extension-installer": true
        }
    },
    "require-dev": {
        "brianium/paratest": "^7.8",
        "nunomaduro/mock-final-classes": "^1.2",
        "php-parallel-lint/php-console-highlighter": "^1.0",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpmd/phpmd": "^2.15",
        "phpstan/phpstan": "^1.10",
        "phpunit/phpunit": "^11.0",
        "squizlabs/php_codesniffer": "^3.9",
        "symfony/var-dumper": "^7.0"
    },
    "scripts": {
        "check-syntax": "parallel-lint --colors -e php -j 10 app/ tests/",
        "check-style": "phpcs -p --colors --standard=phpcs.xml app/ tests/",
        "fix-style": "phpcbf -p --colors --standard=phpcs.xml app/ tests/",
        "phpstan": "phpstan analyse --ansi --memory-limit=1G --configuration=phpstan.neon",
        "phpmd": "phpmd app/,tests/ ansi cleancode,codesize,controversial,design,naming,unusedcode",
        "test": "XDEBUG_MODE=off phpunit --colors --testdox --order-by=random --random-order-seed=$(head -200 /dev/urandom | cksum | cut -f1 -d \" \")",
        "coverage": "XDEBUG_MODE=coverage phpunit --colors --coverage-html=.coverage --coverage-text --testdox --order-by=random --random-order-seed=$(head -200 /dev/urandom | cksum | cut -f1 -d \" \")",
        "paracoverage": "XDEBUG_MODE=coverage paratest --colors --coverage-html=.coverage --coverage-text --order-by=random --random-order-seed=$(head -200 /dev/urandom | cksum | cut -f1 -d \" \")",
        "paratest": "XDEBUG_MODE=off paratest --colors --order-by=random --random-order-seed=$(head -200 /dev/urandom | cksum | cut -f1 -d \" \")",
        "paratest-lineal": "XDEBUG_MODE=off paratest --group Lineal --colors --order-by=random --random-order-seed=$(head -200 /dev/urandom | cksum | cut -f1 -d \" \")",
        "paratest-parallel": "XDEBUG_MODE=off paratest --group Parallel --colors --order-by=random --random-order-seed=$(head -200 /dev/urandom | cksum | cut -f1 -d \" \")",
        "paratest-concurrent": "XDEBUG_MODE=off paratest --group Concurrent --colors --order-by=random --random-order-seed=$(head -200 /dev/urandom | cksum | cut -f1 -d \" \")",
        "start-workers": [
          "nohup php app/Concurrent/Infrastructure/CLI/StartWorker.php > /dev/null 2>&1 &",
          "nohup php app/Concurrent/Infrastructure/CLI/StartWorker.php > /dev/null 2>&1 &",
          "nohup php app/Concurrent/Infrastructure/CLI/StartWorker.php > /dev/null 2>&1 &",
          "nohup php app/Concurrent/Infrastructure/CLI/StartWorker.php > /dev/null 2>&1 &",
          "nohup php app/Concurrent/Infrastructure/CLI/StartWorker.php > /dev/null 2>&1 &",
          "nohup php app/Concurrent/Infrastructure/CLI/StartWorker.php > /dev/null 2>&1 &",
          "nohup php app/Concurrent/Infrastructure/CLI/StartWorker.php > /dev/null 2>&1 &",
          "nohup php app/Concurrent/Infrastructure/CLI/StartWorker.php > /dev/null 2>&1 &",
          "nohup php app/Concurrent/Infrastructure/CLI/StartWorker.php > /dev/null 2>&1 &",
          "nohup php app/Concurrent/Infrastructure/CLI/StartWorker.php > /dev/null 2>&1 &"
        ],
        "process-result": "php app/Concurrent/Infrastructure/CLI/ProcessResult.php"
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
